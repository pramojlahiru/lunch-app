<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Management</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <link rel="stylesheet" href="/styles.css">
    <style>
        .custom-select {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%234a5568'%3e%3cpath d='M15.3 9.3a1 1 0 0 1 1.4 1.4l-4 4a1 1 0 0 1-1.4 0l-4-4a1 1 0 0 1 1.4-1.4l3.3 3.29 3.3-3.3z'/%3e%3c/svg%3e");
            background-position: right 0.75rem center;
            background-repeat: no-repeat;
            background-size: 1.5em;
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            transition: all 0.2s ease;
        }
        .custom-select:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            background-color: #f7fafc;
        }
        .hover-scale-icon {
            transition: transform 0.3s ease;
        }
        .hover-scale-icon:hover {
            transform: scale(1.1);
        }
    </style>
</head>
<body class="bg-gray-100">
<nav class="bg-white shadow-lg">
    <div class="max-w-6xl mx-auto px-4">
        <div class="flex justify-between items-center py-4">
            <div class="flex items-center space-x-2">
                <img src="/fried-rice-outlined.png" class="h-8 w-8" alt="App Logo">
                <span class="text-xl font-bold text-gray-800">Admin Dashboard</span>
            </div>
            <div class="flex items-center space-x-4">
                <span class="text-gray-600">
                    <span id="greeting"></span>, <%= user.displayName %>
                </span>
                <a href="/home"
                   class="text-gray-600 hover:text-[#4EAD68] transition-colors"
                   title="Home">
                    <img src="/home.png" class="h-8 w-8 hover-scale-icon">
                </a>
                <a href="/logout"
                   class="bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-all shadow-md">
                    Logout
                </a>
            </div>
        </div>
    </div>
</nav>

<div class="max-w-6xl mx-auto py-12 px-4">
    <div class="bg-white rounded-2xl shadow-xl p-8">
        <div class="relative border-b border-gray-200 mb-8">
            <div class="flex space-x-8">
                <a href="/admin"
                   class="pb-2 px-1 text-sm font-medium relative transition-all duration-300
                          <%= currentPath === '/admin' ? 'text-blue-600' : 'text-gray-500 hover:text-gray-700' %>">
                    Meal Reports
                    <% if (currentPath === '/admin') { %>
                        <span class="absolute bottom-0 left-0 w-full h-0.5 bg-blue-600 transition-all duration-300 animate-tabSlide"></span>
                    <% } %>
                </a>

                <a href="/admin/users"
                   class="pb-2 px-1 text-sm font-medium relative transition-all duration-300
                          <%= currentPath === '/admin/users' ? 'text-blue-600' : 'text-gray-500 hover:text-gray-700' %>">
                    Manage Users
                    <% if (currentPath === '/admin/users') { %>
                        <span class="absolute bottom-0 left-0 w-full h-0.5 bg-blue-600 transition-all duration-300 animate-tabSlide"></span>
                    <% } %>
                </a>

                <a href="/admin/preferences"
                   class="pb-2 px-1 text-sm font-medium relative transition-all duration-300
                          <%= currentPath === '/admin/preferences' ? 'text-blue-600' : 'text-gray-500 hover:text-gray-700' %>">
                    All Preferences
                    <% if (currentPath === '/admin/preferences') { %>
                        <span class="absolute bottom-0 left-0 w-full h-0.5 bg-blue-600 transition-all duration-300 animate-tabSlide"></span>
                    <% } %>
                </a>
            </div>
        </div>

        <div class="admin-content">
            <h2 class="text-2xl font-bold text-gray-800 mb-6">User Management</h2>

            <!-- Search Filters -->
            <div class="mb-6 grid grid-cols-1 md:grid-cols-3 gap-4">
                <input type="text"
                       id="userSearch"
                       class="w-full px-4 py-2 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500 hover:border-green-300 transition-all"
                       placeholder="Search by name or email...">

                <select id="roleFilter"
                        class="custom-select w-full px-4 py-2 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500 hover:border-green-300 transition-all">
                    <option value="">All Roles</option>
                    <option value="user">User</option>
                    <option value="admin">Admin</option>
                </select>

                <button onclick="resetFilters()"
                        class="w-full bg-gray-200 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-300 transition-all">
                    Clear Filters
                </button>
            </div>

            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                    </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                    <% users.forEach(user => { %>
                        <tr class="hover:bg-gray-50 transition-colors">
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm text-gray-900"><%= user.display_name %></div>
                                <div class="text-sm text-gray-500"><%= user.email %></div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <select class="custom-select w-2/3 px-4 py-2 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500 hover:border-green-300 transition-all"
                                        data-user-id="<%= user.id %>"
                                        <%= user.id === currentUser.id ? 'disabled' : '' %>>
                                    <option value="user" <%= user.role === 'user' ? 'selected' : '' %>>User</option>
                                    <option value="admin" <%= user.role === 'admin' ? 'selected' : '' %>>Admin</option>
                                </select>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <% if (user.id !== currentUser.id) { %>
                                    <button class="delete-user-btn text-red-600 hover:text-red-900 font-medium"
                                            data-user-id="<%= user.id %>"
                                            data-user-email="<%= user.email %>"
                                            data-user-display-name="<%= user.display_name %>">
                                        Delete
                                    </button>
                                <% } %>
                            </td>
                        </tr>
                    <% }) %>
                    </tbody>
                </table>
            </div>
            <div id="no-results" class="text-center py-8 text-gray-500" style="display: none">
                No users found matching your criteria
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script>
    // Filter functionality
    function filterUsers() {
        const searchTerm = document.getElementById('userSearch').value.toLowerCase();
        const roleFilter = document.getElementById('roleFilter').value.toLowerCase();
        let visibleCount = 0;

        document.querySelectorAll('tbody tr').forEach(row => {
            const name = row.children[0].children[0].textContent.toLowerCase();
            const email = row.children[0].children[1].textContent.toLowerCase();
            const role = row.children[1].querySelector('select').value.toLowerCase();

            const matchesSearch = name.includes(searchTerm) || email.includes(searchTerm);
            const matchesRole = role === roleFilter || roleFilter === '';

            if (matchesSearch && matchesRole) {
                row.style.display = '';
                visibleCount++;
            } else {
                row.style.display = 'none';
            }
        });

        document.getElementById('no-results').style.display = visibleCount > 0 ? 'none' : 'block';
    }

    function resetFilters() {
        document.getElementById('userSearch').value = '';
        document.getElementById('roleFilter').value = '';
        filterUsers();
    }

    // Event listeners
    document.getElementById('userSearch').addEventListener('input', filterUsers);
    document.getElementById('roleFilter').addEventListener('change', filterUsers);

    // Toast configuration
    const toastConfig = {
        duration: 3000,
        close: true,
        gravity: "top",
        position: "right",
        style: {
            display: 'flex',
            alignItems: 'center',
            borderRadius: '8px',
            padding: '16px 24px'
        }
    };

    // Role update handling
    document.querySelectorAll('.role-select').forEach(select => {
        select.addEventListener('change', async function() {
            const userId = this.dataset.userId;
            const newRole = this.value;

            try {
                const response = await fetch(`/admin/users/${userId}/role`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ role: newRole })
                });

                if (!response.ok) throw new Error('Failed to update role');
                Toastify({
                    ...toastConfig,
                    text: "Role updated successfully!",
                    backgroundColor: "#4CAF50",
                }).showToast();
            } catch (error) {
                Toastify({
                    ...toastConfig,
                    text: "Failed to update role",
                    backgroundColor: "#EF4444",
                }).showToast();
            }
        });
    });

    // User deletion handling
    document.querySelectorAll('.delete-user-btn').forEach(button => {
        button.addEventListener('click', async function() {
            const userId = this.dataset.userId;
            const userEmail = this.dataset.userEmail;
            const userDisplayName = this.dataset.userDisplayName;

            if (!confirm(`Delete user ${userDisplayName} (${userEmail})? This cannot be undone!`)) return;

            try {
                const response = await fetch(`/admin/users/${userId}/delete`, {
                    method: 'POST'
                });

                if (!response.ok) throw new Error('Failed to delete user');
                this.closest('tr').remove();
                Toastify({
                    ...toastConfig,
                    text: "User deleted successfully!",
                    backgroundColor: "#4CAF50",
                }).showToast();
            } catch (error) {
                Toastify({
                    ...toastConfig,
                    text: "Failed to delete user",
                    backgroundColor: "#EF4444",
                }).showToast();
            }
        });
    });

    // Dynamic greeting
    const updateGreeting = () => {
        const hour = new Date().getHours();
        const greeting = document.getElementById('greeting');
        greeting.textContent = hour < 12 ? 'Good Morning' :
            hour < 18 ? 'Good Afternoon' : 'Good Evening';
    };
    updateGreeting();
    setInterval(updateGreeting, 60000);
</script>
</body>
</html>